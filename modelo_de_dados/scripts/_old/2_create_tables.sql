-- muda o schema, pois será executado como masterqoala
-- todas as tabelas deverão ser criadas com owner QOALA
clear screen
set serveroutput on
alter session set current_schema=QOALA;

begin
execute immediate 'DROP 
  TABLE ACCESSCONTROL CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE COMMENTS CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE COMMENT_LOGS CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE DEVICES CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE DEVICE_GEO_LOCATIONS CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE DEVICE_GEO_LOCATION_LOGS CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE DEVICE_LOGS CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE INFO_COMPANY CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE POSTS CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE POST_LOGS CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE USERS CASCADE CONSTRAINTS';
exception when others then null; end;
/
begin
execute immediate 'DROP
  TABLE USER_LOGS CASCADE CONSTRAINTS';
exception when others then null; end;
/


CREATE TABLE ACCESSCONTROL
  (
    TOKEN      INTEGER NOT NULL ,
    CREATED_AT DATE default sysdate not null,
    EXPIRED_AT DATE ,
    REMOTEIP   VARCHAR2 (15 BYTE) ,
    ID_USER    INTEGER NOT NULL
  )
  LOGGING ;
COMMENT ON COLUMN ACCESSCONTROL.REMOTEIP
IS
  '000.000.000.000' ;

CREATE TABLE COMMENTS
  (
    ID_COMMENT INTEGER NOT NULL ,
    CONTENT CLOB NOT NULL ,
    CREATED_AT  DATE NOT NULL ,
    UPDATED_AT  DATE ,
    APPROVED_AT DATE ,
    DELETED_AT  DATE ,
    ID_POST     INTEGER NOT NULL ,
    ID_USER     INTEGER NOT NULL
  )
  LOGGING ;
ALTER TABLE COMMENTS ADD CONSTRAINT COMMENTS_PK PRIMARY KEY ( ID_COMMENT ) ;

CREATE TABLE COMMENT_LOGS
  (
    LOG CLOB NOT NULL ,
    COMMENTS_ID INTEGER NOT NULL ,
    CREATED_AT  DATE NOT NULL
  )
  LOGGING ;

CREATE TABLE DEVICES
  (
    ID_DEVICE        INTEGER NOT NULL ,
    ALIAS            VARCHAR2 (50) NOT NULL ,
    COLOR            VARCHAR2 (15) ,
    FREQUENCY_UPDATE INTEGER NOT NULL ,
    LAST_LONGITUDE   NUMBER (10,7) ,
    LAST_LATITUDE    NUMBER (10,7) ,
    ALARM            NUMBER (1) ,
    ID_USER          INTEGER NOT NULL ,
    CREATED_AT       DATE NOT NULL ,
    UPDATED_AT       DATE ,
    DELETED_AT       DATE
  )
  LOGGING ;
ALTER TABLE DEVICES ADD CONSTRAINT DEVICE_PK PRIMARY KEY ( ID_DEVICE ) ;

CREATE TABLE DEVICE_GEO_LOCATIONS
  (
    ID_DEVICE_GEO_LOCATION INTEGER NOT NULL ,
    ID_DEVICE              INTEGER NOT NULL ,
    VERIFIED_AT            DATE NOT NULL ,
    LATITUDE               NUMBER (10,7) NOT NULL ,
    LONGITUDE              NUMBER (10,7) NOT NULL
  )
  LOGGING ;
ALTER TABLE DEVICE_GEO_LOCATIONS ADD CONSTRAINT DEVICE_GEO_LOCATION_PK PRIMARY KEY ( ID_DEVICE_GEO_LOCATION ) ;

CREATE TABLE DEVICE_GEO_LOCATION_LOGS
  (
    LOG CLOB NOT NULL ,
    DEVICE_GEO_LOCATION_ID INTEGER NOT NULL ,
    CREATED_AT             DATE NOT NULL
  )
  LOGGING ;

CREATE TABLE DEVICE_LOGS
  (
    LOG CLOB NOT NULL ,
    DEVICE_ID  INTEGER NOT NULL ,
    CREATED_AT DATE NOT NULL
  )
  LOGGING ;

CREATE TABLE INFO_COMPANY
  ( KEY VARCHAR2 (20) , VALUE CLOB
  ) LOGGING ;

CREATE TABLE POSTS
  (
    ID_POST INTEGER NOT NULL ,
    TITLE   VARCHAR2 (255 BYTE) NOT NULL ,
    CONTENT CLOB NOT NULL ,
    CREATED_AT   DATE NOT NULL ,
    UPDATED_AT   DATE ,
    PUBLISHED_AT DATE ,
    DELETED_AT   DATE ,
    ID_USER      INTEGER NOT NULL
  )
  LOGGING ;
ALTER TABLE POSTS ADD CONSTRAINT POST_PK PRIMARY KEY ( ID_POST ) ;

CREATE TABLE POST_LOGS
  (
    LOG CLOB NOT NULL ,
    POST_ID    INTEGER NOT NULL ,
    CREATED_AT DATE NOT NULL
  )
  LOGGING ;

CREATE TABLE USERS
  (
    ID_USER    INTEGER NOT NULL ,
    NAME       VARCHAR2 (255 CHAR) NOT NULL ,
    PASSWORD   VARCHAR2 (255 CHAR) NOT NULL ,
    EMAIL      VARCHAR2 (255 CHAR) NOT NULL ,
    PERMISSION NUMBER (2) DEFAULT 1 NOT NULL ,
    CREATED_AT DATE NOT NULL ,
    UPDATED_AT DATE ,
    DELETED_AT DATE,
    ADDRESS    VARCHAR2 (255 CHAR) ,
    DISTRICT   VARCHAR2 (255 CHAR) ,
    CITY       VARCHAR2 (100) ,
    STATE      VARCHAR2 (20 CHAR) ,
    ZIPCODE    VARCHAR2 (9 CHAR)
  )
  LOGGING ;
ALTER TABLE ACCESSCONTROL ADD CONSTRAINT ACCESSCONTROL_PK PRIMARY KEY ( TOKEN ) ;
ALTER TABLE USERS ADD CONSTRAINT CK_USER_PERMISSION CHECK ( PERMISSION IN (1, 2, 3)) ;
COMMENT ON COLUMN USERS.PERMISSION
IS
  '1: Normal Public, 2: Editor/Writer, 3: Administrator' ;
CREATE UNIQUE INDEX IDX_USERS_EMAIL ON USERS ( EMAIL ASC , DELETED_AT DESC ) LOGGING ;
  ALTER TABLE USERS ADD CONSTRAINT USER_PK PRIMARY KEY ( ID_USER ) ;

CREATE TABLE USER_LOGS
  (
    LOG CLOB NOT NULL ,
    USER_ID    INTEGER,
    CREATED_AT DATE NOT NULL
  )
  LOGGING ;

ALTER TABLE ACCESSCONTROL ADD CONSTRAINT ACCESSCONTROL_USERS_FK FOREIGN KEY ( ID_USER ) REFERENCES USERS ( ID_USER ) NOT DEFERRABLE ;

ALTER TABLE COMMENTS ADD CONSTRAINT COMMENTS_POST_FK FOREIGN KEY ( ID_POST ) REFERENCES POSTS ( ID_POST ) NOT DEFERRABLE ;

ALTER TABLE COMMENTS ADD CONSTRAINT COMMENTS_USER_FK FOREIGN KEY ( ID_USER ) REFERENCES USERS ( ID_USER ) NOT DEFERRABLE ;

ALTER TABLE DEVICES ADD CONSTRAINT DEVICES_USER_FK FOREIGN KEY ( ID_USER ) REFERENCES USERS ( ID_USER ) NOT DEFERRABLE ;

ALTER TABLE DEVICE_GEO_LOCATIONS ADD CONSTRAINT DEVICE_GEO_LOCATION_DEVICE_FK FOREIGN KEY ( ID_DEVICE ) REFERENCES DEVICES ( ID_DEVICE ) NOT DEFERRABLE ;

ALTER TABLE POSTS ADD CONSTRAINT POST_USER_FK FOREIGN KEY ( ID_USER ) REFERENCES USERS ( ID_USER ) NOT DEFERRABLE ;
